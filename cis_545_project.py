# -*- coding: utf-8 -*-
"""CIS 545 Project

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oi2uFR3cEdqodOQdcgQGv_0oLvUTfy54

# New Section

Initializing the workspace:
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from google.colab import files
from google.colab import drive 
drive.mount('/content/gdrive')

housing_df_raw = pd.read_csv("/content/gdrive/Shareddrives/CIS545/housing.csv", encoding="gb2312")

housing_df_truncated = housing_df_raw.drop(["url", "id", "Cid"], axis=1)

housing_df_truncated.dropna()

housing_df_truncated.dtypes

# Some observations
# 1. Floor. 高中低+数字, actually there are 2 features here: the type of building (by level) and the specific floor
# 2. construction time. Maybe filtering the 未知 cases?
housing_df_truncated[housing_df_truncated["constructionTime"] == "未知"]
# So there are ~20000 buildings where the construction time are unknown. Maybe some analysis on this?
# Recent buildings are likely to have a precise building date.

housing_df_cleaned = housing_df_truncated.dropna()[housing_df_truncated["constructionTime"] != "未知"]
housing_df_cleaned

# ZYZ 工作流
# 0. 把无意义的列删除，考虑是否dropna
# 1. 把datetime object变成年月日
# 2. parse the floor column
floor_dict = {"底":1, "低":2, "中":3, "高":4, "顶":5, "未知":6}
def floor_parser(desc):
  lst = desc.split(" ")
  lst[0] = floor_dict[lst[0]]
  return lst

housing_df_cleaned["relativeFloor"] = housing_df_cleaned["floor"].apply(lambda x: floor_parser(x)[0])
housing_df_cleaned["floorOriginal"] = housing_df_cleaned["floor"].apply(lambda x: floor_parser(x)[1])
housing_df_cleaned

housing_df_cleaned.sort_values(by = ['relativeFloor'])

housing_df_cleaned.plot(x='Lng', y='Lat', style='o')

"""1. Linear Regression
2. NN for regression
3. Compare these?

Linear Regression workflow:
1. PCA, normalize, etc.
2. Train linear regression model by gradient descent? With regulation?
3. Evaluation and other explorations

Visualization Ideas:
1. Overall General Scatter plot, overlaid with the map of Beijing
2. Clustering of geological positions (long, lati)
3. Correlation Matrix between different factors
"""